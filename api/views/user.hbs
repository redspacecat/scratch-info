<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />

        <title>{{username}} ‚Äî Scratch Info</title>

        <!-- import the webpage's stylesheet -->
        <link rel="stylesheet" href="/css/style.css" />
        <link rel="stylesheet" href="/css/navbar.css">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="/js/main.js"></script>
        <script src="/js/navbar.js"></script>
    </head>
    <body>
    {{{nav}}}
      <div id="container">
        

        <!-- this is the start of content -->
        <!--     <div style="display:flex"> -->

        <!--       <div style="display:flex;flex-wrap:wrap;max-width:350px"> -->
        <div style="margin-bottom: 15px" class="cf">
            <img id="username-img" src="{{profilePicture}}" />
            <span id="username-text">{{usernameAsterisk}}</span><br />
        </div>
        <div style="display:flex;flex-wrap:wrap">
            <div class="cf user-info-box" id="basicInfo">
                <h3 class="ct h0">Basic Info</h3>
                <span>User ID: {{id}}</span><br />
                <span>Join Date: {{joinDate}}</span><br />
                <span>Country: {{country}}</span><br />
            </div>
            <!--       </div> -->
            <div class="cf ct user-info-box" id="browserandos">
                <div style="text-align:center">
                    <h3 class="ct h0">Browser and OS<span class="info" data-info="browserandos"></span></h3>
                    <small><span id="browserOStimeAgo">Loading...</span></span></small><br />
                </div>
                <span>Browser: <span id="browser">Loading...</span></span><br>
                <span>OS: <span id="os">Loading...</span></span><br>
                <a href="{{username}}/browserHistory">View Browser and OS History</a><br />
            </div></div>

        <div class="cf user-info-box" id="otherinfo">
          <h3 class="ct h0">Other Info</h3>
          <div class="cf">
            <span>Follower Count: <span id="followers">{{followers}}</span></span><span class="info" data-info="griffyfollowers" style="visibility:hidden;"></span><br />
            <span>Following Count: <span id="following">{{following}}</span></span><br />
            <span>Project Shared: <span id="projectsShared">Loading...</span></span><br />
          </div>
        </div>
        <!--       </div> -->
        <!--     </div> -->

        <br />
        <h3 class="cf h0">Statistics</h3>
        <!--     <span id="loveToViewRatio"></span> -->
        <table width="550px" id="stats-table" class="c">
            <tr><td colspan="3" style="text-align:center">Total Project Stats<span class="info" data-info="totalstats"></span></td></tr>
            <!--       <tr><td>{{stats.totalLoves}} ‚ù§Ô∏è</td><td>{{stats.totalFaves}} ‚≠ê</td><td>{{stats.totalViews}} üëÅÔ∏è</td></tr> -->
            <tr><td id="totalLoves"></td><td id="totalFaves"></td><td id="totalViews"></td></tr>
            <tr><td id="loveToViewRatio"><span>...</span><span class="info" data-info="lovetoview"></span></td><td id="faveToViewRatio"><span>...</span><span class="info" data-info="favetoview"></span></td><td id="faveToLoveRatio"><span>...</span><span class="info" data-info="favetolove"></span></td></tr>
        </table>
        <br />
        <table width="550px" id="average-stats-table" class="c">
            <tr><td colspan="3" style="text-align:center">Average Project Stats<span class="info" data-info="averagestats"></span></td></tr>
            <!--       <tr><td>{{stats.averageStats.averageLoves}} ‚ù§Ô∏è</td><td>{{stats.averageStats.averageFaves}} ‚≠ê</td><td>{{stats.averageStats.averageViews}} üëÅÔ∏è</td></tr> -->
            <tr><td id="averageLoves">...</td><td id="averageFaves">...</td><td id="averageViews">...</td></tr>
        </table>
        <br />
        <div id="user-projects-container" hidden>
            <input id="searchbox" type="text" class="c" style="display:block;margin-bottom:5px" placeholder="üîç Search" oninput="search(this.value)">
            <div id="sort-buttons">
                <span>Sort by: </span>
                <button style="padding-right: 15px;" class="sorter" onclick="sortBy('popularity', this)">Popularity<span class="info" data-info="popularity"></span></button>
                <button class="sorter" onclick="sortBy('loves', this)">Loves</button>
                <button class="sorter" onclick="sortBy('faves', this)">Favorites</button>
                <button class="sorter" onclick="sortBy('views', this)">Views</button>
                <button class="sorter" onclick="sortBy('loveToViewRatio', this)">Love to View Ratio</button>
                <button class="sorter" onclick="sortBy('faveToViewRatio', this)">Favorite to View Ratio</button>
                <button class="sorter" onclick="sortBy('faveToLoveRatio', this)">Favorite to Love Ratio</button>
                <button class="sorter" onclick="sortBy('time', this)">Recent</button>
            </div>
            <div id="projects" class="project-container"></div>
        </div>
      </div>
        <script src="/js/info.js"></script>
      
      <script>
        let text = document.querySelector("#username-text").innerText;
history.replaceState(null, "", "/users/" + text.slice(0, text.endsWith("*") ? text.length - 1 : text.length));
async function getMoreData() {
    let data = await (await fetch("/api/followering/{{username}}")).json();
    if ("{{username}}" != "griffpatch") {
        document.querySelector("#followers").innerText = data.followers;
    }
    document.querySelector("#following").innerText = data.following;

    // other data
    let data2 = await (await fetch("/api/userInfo/{{username}}")).json();
    document.querySelector("#browserOStimeAgo").innerText = `(as of ${data2.browserOStimeAgo} days ago)`
    document.querySelector("#browser").innerText = data2.browser || "?"
    document.querySelector("#os").innerText = data2.os || "?"
    document.querySelector("#projectsShared").innerText = data2.projectsShared || "?"
}

async function getGriffyFollowers() {
    document.querySelector("span.info[data-info='griffyfollowers']").style.visibility = "visible"
    document.querySelector("#followers").innerText = "Loading... (this may take up to 30 seconds if the server is slow)";
    let data = await (
        await fetch("https://griffpatch-follower-count.glitch.me/count", {
            method: "POST",
        })
    ).text();
    document.querySelector("#followers").innerText = data;
}
getMoreData();
if ("{{username}}" == "griffpatch") {
    getGriffyFollowers();
}

let projectData;
let currentSorting = "popularity";
let direction = 1;
// 0 is normal, 1 is inverted
document.querySelectorAll(".info[data-info]").forEach((el) => (el.style.display = "none"));

function htmlToNode(html) {
    const template = document.createElement("template");
    template.innerHTML = html;
    const nNodes = template.content.childNodes.length;
    if (nNodes !== 1) {
        throw new Error("failed to parse");
    }
    return template.content.firstChild;
}
async function getProjectStats() {
    let stats = await (await fetch("/api/projectStats/{{username}}")).json();
    projectData = stats.projects;
    applyStats(stats);
    createList();
    document.querySelector(".sorter").click();
    document.querySelectorAll(".info[data-info]").forEach((el) => (el.style.display = ""));
    document.querySelector("#user-projects-container").hidden = false;
}

function createList() {
    let projectListEl = document.querySelector("#projects");
    let baseProject = `<div class="one-project">
                <a onclick="topbar.show()">
                  <img class="project-image" loading="lazy">
                </a>
                <br>
                <a class="project-title" onclick="topbar.show()"></a>
                <br>
                <div class="project-stats-line">
                  <span class="loves"></span>
                  <span class="faves"></span>
                  <span class="views"></span>
                </div>
                <div class="project-stats-line">
                  <span class="loveToViewRatio"></span>
                  <span class="loveToViewRatio"></span>
                </div>
                <div class="project-stats-line">
                  <span class="faveToLoveRatio"></span>
                </div>
              </div>`;
    let replaceRegex = /\\n[ ]+/gi;
    baseProject = baseProject.replaceAll(replaceRegex, "");
    for (let project of projectData) {
        let newProject = htmlToNode(baseProject);
        newProject.querySelector("img").src = project.img;
        newProject.querySelector("a").href = `/projects/${project.id}`;
        newProject.querySelectorAll("a")[1].innerText = project.title;
        newProject.querySelectorAll("a")[1].href = `/projects/${project.id}`;
        newProject.querySelectorAll("span")[0].innerText = project.loves.toLocaleString();
        newProject.querySelectorAll("span")[1].innerText = project.faves.toLocaleString();
        newProject.querySelectorAll("span")[2].innerText = project.views.toLocaleString();
        newProject.querySelectorAll("span")[3].innerText = `${Math.round(project.loveToViewRatio * 100) / 100}% love/view`;
        newProject.querySelectorAll("span")[4].innerText = `${Math.round(project.faveToViewRatio * 100) / 100}% fave/view`;
        newProject.querySelectorAll("span")[5].innerText = `${Math.round(project.faveToLoveRatio * 100) / 100}% favorite/love`; // newProject.querySelectorAll("span")[6].innerText = project.remixCount.toLocaleString()
        projectListEl.appendChild(newProject);
    }
  
    search(document.querySelector("#searchbox").value)
}

function applyStats(stats) {
    document.querySelector("#loveToViewRatio").children[0].innerText = `${Math.round(stats.loveToViewRatio * 100) / 100}% love/view`;
    document.querySelector("#faveToViewRatio").children[0].innerText = `${Math.round(stats.faveToViewRatio * 100) / 100}% favorite/view`;
    document.querySelector("#faveToLoveRatio").children[0].innerText = `${Math.round(stats.faveToLoveRatio * 100) / 100}% favorite/love`;
    document.querySelector("#totalLoves").innerText = stats.totalLoves.toLocaleString();
    document.querySelector("#totalFaves").innerText = stats.totalFaves.toLocaleString();
    document.querySelector("#totalViews").innerText = stats.totalViews.toLocaleString();
    document.querySelector("#averageLoves").innerText = stats.averageStats.averageLoves.toLocaleString();
    document.querySelector("#averageFaves").innerText = stats.averageStats.averageFaves.toLocaleString();
    document.querySelector("#averageViews").innerText = stats.averageStats.averageViews.toLocaleString();
}

function popularitySort(a, b) {
    if (direction == 1) {
        if (a.loves + a.faves < b.loves + b.faves) {
            return -1;
        }
        if (a.loves + a.faves > b.loves + b.faves) {
            return 1;
        }
        if (a.views < b.views) {
            return -1;
        }
        if (a.views > b.views) {
            return 1;
        }
        return 0;
    } else {
        if (b.loves + b.faves < a.loves + a.faves) {
            return -1;
        }
        if (b.loves + b.faves > a.loves + a.faves) {
            return 1;
        }
        if (b.views < a.views) {
            return -1;
        }
        if (b.views > a.views) {
            return 1;
        }
        return 0;
    }
}

function sortBy(sorter, el) {
    document.querySelectorAll(".sorter").forEach((el) => (el.style.fontWeight = ""));
    el.style.fontWeight = "bold";
    if (currentSorting == sorter) {
        direction = 1 - direction;
    } else {
        direction = 0;
    }
    currentSorting = sorter;
    if (direction == 0) {
        if (sorter == "popularity") {
            projectData.sort(popularitySort); // projectData.sort((a, b) => (b.loves + b.faves) - (a.loves + a.faves))
        } else {
            projectData.sort((a, b) => b[sorter] - a[sorter]);
        }
    } else {
        if (sorter == "popularity") {
            projectData.sort(popularitySort); // projectData.sort((a, b) => (a.loves + a.faves) - (b.loves + b.faves))
        } else {
            projectData.sort((a, b) => a[sorter] - b[sorter]);
        }
    }
    document.querySelector("#projects").innerHTML = "";
    createList();
}
getProjectStats();

        
function search(query) {
  let els = document.querySelectorAll(".one-project")
  for (let el of els) {
    if (el.querySelector(".project-title").innerText.toLowerCase().includes(query.toLowerCase())) {
      el.hidden = false
    } else {
      el.hidden = true
    }
  }
}
      </script>

    </body>
</html>