<!DOCTYPE html>
<html lang="en">

<head>
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/navbar.css" />
    <script src="/js/info.js"></script>
    <script src="/js/main.js"></script>
    <script src="/js/navbar.js"></script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scratch Forum Leaderboards</title>
    <style>
        .item {
            background-color: rgb(225, 232, 236);
            margin: 5px 0px;
            padding: 2px;
            box-sizing: border-box;
            display: flex;
            align-items: center;
            font-family: Roboto, Arial, sans-serif;
            border-radius: 5px;
            flex-wrap: wrap;
            transition: width 1s;
        }
        /* #list .item:nth-child(1) {
            background-color: rgb(236, 231, 204);
        } */

        #back-to-top {
            position: fixed;
            top: 0;
            right: 0;
            margin: 10px;
            padding: 10px;
            background-color: aquamarine;
            border: 3px solid green;
            border-radius: 10px;
            transition: 0.5s;
            opacity: 0;
        }

        #back-to-top:hover {
            background-color: rgb(110, 181, 157);
        }

        #gopage {
            width: 80px;
        }

        #container.dark-mode {
            background-color: black;
        }

        .loader3 {
            width: 50px;
            padding: 8px;
            aspect-ratio: 1;
            border-radius: 50%;
            background: #25b09b;
            --_m: 
                conic-gradient(#0000 10%,#000),
                linear-gradient(#000 0 0) content-box;
            -webkit-mask: var(--_m);
                    mask: var(--_m);
            -webkit-mask-composite: source-out;
                    mask-composite: subtract;
            animation: l3 1s infinite linear;
        }
        @keyframes l3 {to{transform: rotate(1turn)}}
    </style>
</head>

<body>
    {{{nav}}}
    <div id="container">
    <div class="cf">
        <form onsubmit="findUser(event)">
        <input type="text" style="width: 250px" placeholder="üîç Find a user" id="usersearch">
        <input type="submit" value="Go">
        </form>
    </div>
    <button id="back-to-top">Back to Top</button>
    <div class="cf" style="margin-top: 5px;">
                <select id="categorySwitcher" onchange="changeCategory()">
            <option value="All">All</option>
            <optgroup label="Welcome to Scratch"> <!-- list from postpercent -->
                <option value="Announcements">Announcements</option>
                <option value="New Scratchers">New Scratchers</option>
            </optgroup>
            <optgroup label="Making Scratch Projects">
                <option value="Help With Scripts">Help With Scripts</option>
                <option value="Show and Tell">Show and Tell</option>
                <option value="Project Ideas">Project Ideas</option>
                <option value="Collaboration">Collaboration</option>
                <option value="Requests">Requests</option>
            </optgroup>
            <optgroup label="About Scratch">
                <option value="Questions about Scratch">Questions about Scratch</option>
                <option value="Suggestions">Suggestions</option>
                <option value="Bugs and Glitches">Bugs and Glitches</option>
                <option value="Advanced Topics">Advanced Topics</option>
                <option value="Connecting to the Physical World">Connecting to the Physical World</option>
                <option value="Developing Scratch Extensions">Developing Scratch Extensions</option>
                <option value="Open Source Projects">Open Source Projects</option>
            </optgroup>
            <optgroup label="Interests Beyond Scratch">
                <option value="Things I'm Making and Creating">Things I'm Making and Creating</option>
                <option value="Things I'm Reading and Playing">Things I'm Reading and Playing</option>
            </optgroup>
            <optgroup label="Scratch Around the World">
                <option value="Africa">Africa</option>
                <option value="Bahasa Indonesia">Bahasa Indonesia</option>
                <option value="Catal√†">Catal√†</option>
                <option value="Deutsch">Deutsch</option>
                <option value="ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨">ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨</option>
                <option value="Espa√±ol">Espa√±ol</option>
                <option value="ŸÅÿßÿ±ÿ≥€å">ŸÅÿßÿ±ÿ≥€å</option>
                <option value="Fran√ßais">Fran√ßais</option>
                <option value="◊¢◊ë◊®◊ô◊™">◊¢◊ë◊®◊ô◊™</option>
                <option value="‡§π‡§ø‡§®‡•ç‡§¶‡•Ä">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</option>
                <option value="ÌïúÍµ≠Ïñ¥">ÌïúÍµ≠Ïñ¥</option>
                <option value="Italiano">Italiano</option>
                <option value="Nederlands">Nederlands</option>
                <option value="Êó•Êú¨Ë™û">Êó•Êú¨Ë™û</option>
                <option value="Norsk">Norsk</option>
                <option value="Polski">Polski</option>
                <option value="Portugu√™s">Portugu√™s</option>
                <option value="P—É—Å—Å–∫–∏–π">P—É—Å—Å–∫–∏–π</option>
                <option value="T√ºrk√ße">T√ºrk√ße</option>
                <option value="‰∏≠Êñá">‰∏≠Êñá</option>
                <option value="Other Languages">Other Languages</option>
                <option value="Translating Scratch">Translating Scratch</option>
            </optgroup>
        </select>
    </div>
    <div class="cf" style="margin-top: 5px;">
        <a id="prev">&lt; Previous Page</a>
        <input type="number" placeholder="Page #" id="gopage">
        <a id="next">Next Page &gt;</a>
    </div>
    <br>
    <div id="list"></div>
    <div class="cf">
    <div class="loader3"></div>
    </div>
    <table id="table" class="c" hidden>
        <tr style="font-weight: bold;text-align: center;"><td>Username</td><td>Posts</td></tr>
    </table>
    </div>
    <script>
        if (darkMode) {
            document.querySelector("html").classList.add("dark-mode");
            document.querySelectorAll("a").forEach((el) => el.classList.add("dark-mode-link"));
            document.querySelectorAll("button, input[type='button']").forEach((el) => el.classList.add("dark-mode", "dark-mode-button"));
            document.querySelectorAll("#table, #container").forEach((el) => el.classList.add("dark-mode"))
        }
        window.onscroll = scrollFunction
        scrollFunction()

        document.querySelector("#gopage").addEventListener("keyup", ({key}) => {
            if (key === "Enter") {
                if (!isNaN(document.querySelector("#gopage").value))
                location.search = "?page=" + document.querySelector("#gopage").value + "&category=" + category
                topbar.show()
            }
        })

        function scrollFunction() {
            if (document.body.scrollTop > 500 || document.documentElement.scrollTop > 500) {
                document.getElementById("back-to-top").style.opacity = "1";
            } else {
                document.getElementById("back-to-top").style.opacity = "0";
            }
        }

        document.getElementById("back-to-top").addEventListener("click", function(event){
            event.preventDefault();
            window.scrollTo({top: 0, behavior: 'smooth'});
        });

        function changeCategory() {
            let target = document.querySelector("#categorySwitcher").value
            location.search = `?category=${categories[target]}`
            topbar.show()
        }

        function findUser(e) {
            e.preventDefault()
            const toSearch = document.querySelector("#usersearch").value
            console.log(toSearch)
            const usernames = data.map(el => el.user.toLowerCase())
            const index = usernames.indexOf(toSearch.toLowerCase())
            if (index == -1) {
                alert(`${toSearch} has not posted in ${categories2[category]}`)
                return
            }
            console.log(index)
            const page = Math.floor(index / 1000)
            const piece = index % 1000
            location.search = `?page=${page + 1}&item=${piece}&category=${category}`
            topbar.show()
        }
        
        function htmlToNode(html) {
            const template = document.createElement('template');
            template.innerHTML = html;
            const nNodes = template.content.childNodes.length;
            return template.content.firstChild;
        }

        function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }

        (async function go() {
            let searchParams = new URLSearchParams(location.search)
            window.page = searchParams.get("page") || 1
            window.category = searchParams.get("category") || 0
            document.querySelector("#categorySwitcher").value = ""
            document.querySelector("#prev").href = "?page=" + (parseInt(page) - 1) + "&category=" + category
            document.querySelector("#next").href = "?page=" + (parseInt(page) + 1) + "&category=" + category
            document.querySelector("#gopage").value = page
            if (page == 1) {
                document.querySelector("#prev").hidden = true
            }
            console.log(page)
            let data = (await (await fetch(`https://cdn.jsdelivr.net/gh/redspacecat/scratch-forums-data/post_counts${parseInt(category) ? "_" + category: ""}.txt`)).text()).trim().split("\n")
            for ([i, d] of data.entries()) {
                // data[i] = JSON.parse(d)
                const item = d.split(",")
                data[i] = {user: item[0], count: parseInt(item[1].trim())}
            }

            if (page > Math.floor(data.length / 1000)) {
                document.querySelector("#next").hidden = true
            }

            console.log(data)
            window.data = data
            container = document.querySelector("#list")
            container2 = document.querySelector("#table")
            let max = data[0].count
            let i2
            if (page == 1) {
                i2 = 0
            } else {
                i2 = (page - 1) * 1000
            }
            let base = i2
            let mode = 0
            for (let [i, item] of data.entries()) {
                user = data[i + base]
                /*if (mode == 0) {
                    if (i2 > -1) {
                        mode = 1
                        continue
                    }
                    newEl = htmlToNode(`<div data-target-width="${(user.count / max * 100).toFixed(3)}%" style="width: fit-content; margin: 5px auto;" class="item"><span style="margin: 0px 5px;">#${i2 + 1}</span><span>${user.user}</span><span style="margin-left: auto;margin-right: 10px;">${user.count}</span></div>`)
                    container.appendChild(newEl)
                    if (i2 > -1) mode = 1
                } else {*/
                    newEl = htmlToNode(`<tr id="${i2 - base}"><td>#${i2 + 1} <a class="forum-user-link" onclick="topbar.show()" href="/users/${user.user}/posts">${user.user}</td><td style="width: 60px;text-align: center;">${user.count}</td></tr>`)
                    container2.appendChild(newEl)
                    if (i2 > 1000 + base - 2) break
                i2++
                if (i2 == data.length) break
            }

            document.querySelector("#table").hidden = false
            document.querySelector(".loader3").style.display = "none"

            if (searchParams.has("item")) {
                const el = document.getElementById(searchParams.get("item").toString())
                el.scrollIntoView({
                    behavior: 'auto',
                    block: 'center',
                    inline: 'center',
                    behavior: "smooth"
                });
                if (darkMode) {
                    el.style.backgroundColor = "darkblue"
                } else {
                    el.style.backgroundColor = "lightyellow"
                }
            }

        })()
    </script>
    <script type="module">
        import categoryMap from "https://cdn.jsdelivr.net/gh/jeffalo/ocular@f321922b56d96f5aa4b135315cc252ba95b3e807/assets/category-map.js" // thanks to jeffalo!
        const f = obj => Object.fromEntries(Object.entries(obj).map(a => a.reverse()))
        window.categories = f(Object.fromEntries(categoryMap))
        window.categories["All"] = "0"
        window.categories2 = Object.fromEntries(categoryMap)
        window.categories2["0"] = "All"
        document.querySelector("#categorySwitcher").value = categories2[category]
    </script>
    </div>
</body>

</html>